.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  border: 0;
  outline: 0;
  padding: var(--space-2xs) var(--space-sm);
  border-radius: var(--border-radius-lg);
  cursor: pointer;
  background-color: transparent;
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  letter-spacing: var(--letter-spacing-base);

  /* when there is a pre icon, that change the buttons baseline so using top to make sure buttons always align */
  vertical-align: top;
}

.small {
  padding: var(--space-3xs) var(--space-xs);
}

.button-content {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

.button-main-content {
  display: inline-flex;
}

.button[disabled]:not(.unstyled) {
  opacity: var(--opacity-disabled);
}

/* shapes */
.circle {
  border-radius: var(--border-radius-full);
  padding: var(--space-xs);
}

/* outlined */
.outlined {
  border: 1px solid transparent;
}

.text {
  padding: 0;
}

/* neutral */
.neutral {
  color: var(--color-neutral-bold);
  fill: var(--color-neutral-bold);
}

.neutral.outlined {
  border-color: var(--color-neutral-bold);
}

.neutral.filled {
  background-color: var(--color-neutral);
  color: var(--color-on-neutral);
  fill: var(--color-on-neutral);
}

.neutral.filled:hover {
  background-color: var(--color-neutral2);
}

.neutral.filled:active {
  background-color: var(--color-neutral3);
}

.neutral.weak {
  background-color: var(--color-neutral-subtle);
}

.neutral.weak:hover,
.neutral.outlined:hover,
.neutral.ghost:hover {
  background-color: var(--color-neutral-subtle2);
}

.neutral.weak:active,
.neutral.outlined:active,
.neutral.outlined.is-selected,
.neutral.ghost:active {
  background-color: var(--color-neutral-subtle3);
}

/* brand */
.brand {
  color: var(--color-brand-bold);
  fill: var(--color-brand-bold);
}

.brand.outlined {
  border-color: var(--color-brand-bold);
}

.brand.filled {
  background-color: var(--color-brand);
  color: var(--color-on-brand);
  fill: var(--color-on-brand);
}

.brand.filled:hover {
  background-color: var(--color-brand2);
}

.brand.filled:active {
  background-color: var(--color-brand3);
}

.brand.weak {
  background-color: var(--color-brand-subtle);
}

.brand.weak:hover,
.brand.outlined:hover,
.brand.ghost:hover {
  background-color: var(--color-brand-subtle2);
}

.brand.weak:active,
.brand.outlined:active,
.brand.outlined.is-selected,
.brand.ghost:active {
  background-color: var(--color-brand-subtle3);
}

/* success */
.success {
  color: var(--color-success-bold);
  fill: var(--color-success-bold);
}

.success.outlined {
  border-color: var(--color-success-bold);
}

.success.filled {
  background-color: var(--color-success);
  color: var(--color-on-success);
  fill: var(--color-on-success);
}

.success.filled:hover {
  background-color: var(--color-success2);
}

.success.filled:active {
  background-color: var(--color-success3);
}

.success.weak {
  background-color: var(--color-success-subtle);
}

.success.weak:hover,
.success.outlined:hover,
.success.ghost:hover {
  background-color: var(--color-success-subtle2);
}

.success.weak:active,
.success.outlined:active,
.success.outlined.is-selected,
.success.ghost:active {
  background-color: var(--color-success-subtle3);
}

/* info */
.info {
  color: var(--color-info-bold);
  fill: var(--color-info-bold);
}

.info.outlined {
  border-color: var(--color-info-bold);
}

.info.filled {
  background-color: var(--color-info);
  color: var(--color-on-info);
  fill: var(--color-on-info);
}

.info.filled:hover {
  background-color: var(--color-info2);
}

.info.filled:active {
  background-color: var(--color-info3);
}

.info.weak {
  background-color: var(--color-info-subtle);
}

.info.weak:hover,
.info.outlined:hover,
.info.ghost:hover {
  background-color: var(--color-info-subtle2);
}

.info.weak:active,
.info.outlined:active,
.info.outlined.is-selected,
.info.ghost:active {
  background-color: var(--color-info-subtle3);
}

/* warning */
.warning {
  color: var(--color-warning-bold);
  fill: var(--color-warning-bold);
}

.warning.outlined {
  border-color: var(--color-warning-bold);
}

.warning.filled {
  background-color: var(--color-warning);
  color: var(--color-on-warning);
  fill: var(--color-on-warning);
}

.warning.filled:hover {
  background-color: var(--color-warning2);
}

.warning.filled:active {
  background-color: var(--color-warning3);
}

.warning.weak {
  background-color: var(--color-warning-subtle);
}

.warning.weak:hover,
.warning.outlined:hover,
.warning.ghost:hover {
  background-color: var(--color-warning-subtle2);
}

.warning.weak:active,
.warning.outlined:active,
.warning.outlined.is-selected,
.warning.ghost:active {
  background-color: var(--color-warning-subtle3);
}

/* danger */
.danger {
  color: var(--color-danger-bold);
  fill: var(--color-danger-bold);
}

.danger.outlined {
  border-color: var(--color-danger-bold);
}

.danger.filled {
  background-color: var(--color-danger);
  color: var(--color-on-danger);
  fill: var(--color-on-danger);
}

.danger.filled:hover {
  background-color: var(--color-danger2);
}

.danger.filled:active {
  background-color: var(--color-danger3);
}

.danger.weak {
  background-color: var(--color-danger-subtle);
}

.danger.weak:hover,
.danger.outlined:hover,
.danger.ghost:hover {
  background-color: var(--color-danger-subtle2);
}

.danger.weak:active,
.danger.outlined:active,
.danger.outlined.is-selected,
.danger.ghost:active {
  background-color: var(--color-danger-subtle3);
}

/* pre post items */
.pre-post-item {
  display: inline-flex;
}

.pre-post-item.pre-item {
  margin-right: var(--space-2xs);
}

.pre-post-item.post-item {
  margin-left: var(--space-2xs);
}

.is-loading .pre-post-item {
  :global {
    animation: spin 1s linear;
    animation-iteration-count: infinite;
  }
}

/* group */
.button-group {
  display: inline-flex;
  align-items: center;
  gap: var(--space-xs);
}

/* this basically is a toggle button */
.button-group-attached {
  gap: 0;
  border: 1px solid var(--color-neutral-bold);
  border-radius: var(--border-radius-lg);

  .button {
    border: 0;
  }

  /*
   * with attached buttons, is stylistically looks weird to have the border of the button have the opacity tied to
   * it so in that case, we only set the opacity of the content
   */
  .button[disabled] {
    opacity: 1;

    .button-content {
      opacity: var(--opacity-disabled);
    }
  }

  .button:not(:first-child) {
    border-left: 1px solid var(--color-neutral-bold);
  }

  .button:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .button:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .button:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}
